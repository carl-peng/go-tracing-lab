// Code generated by protoc-gen-go.
// source: proto/weather.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	proto/weather.proto

It has these top-level messages:
	WeatherRequest
	WeatherResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type WeatherRequest struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Zip   int64  `protobuf:"varint,2,opt,name=zip" json:"zip,omitempty"`
}

func (m *WeatherRequest) Reset()                    { *m = WeatherRequest{} }
func (m *WeatherRequest) String() string            { return proto1.CompactTextString(m) }
func (*WeatherRequest) ProtoMessage()               {}
func (*WeatherRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *WeatherRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *WeatherRequest) GetZip() int64 {
	if m != nil {
		return m.Zip
	}
	return 0
}

type WeatherResponse struct {
	Location    string  `protobuf:"bytes,1,opt,name=location" json:"location,omitempty"`
	Description string  `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Temperature float64 `protobuf:"fixed64,3,opt,name=temperature" json:"temperature,omitempty"`
}

func (m *WeatherResponse) Reset()                    { *m = WeatherResponse{} }
func (m *WeatherResponse) String() string            { return proto1.CompactTextString(m) }
func (*WeatherResponse) ProtoMessage()               {}
func (*WeatherResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *WeatherResponse) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *WeatherResponse) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *WeatherResponse) GetTemperature() float64 {
	if m != nil {
		return m.Temperature
	}
	return 0
}

func init() {
	proto1.RegisterType((*WeatherRequest)(nil), "proto.WeatherRequest")
	proto1.RegisterType((*WeatherResponse)(nil), "proto.WeatherResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Weather service

type WeatherClient interface {
	GetCurrent(ctx context.Context, in *WeatherRequest, opts ...grpc.CallOption) (*WeatherResponse, error)
}

type weatherClient struct {
	cc *grpc.ClientConn
}

func NewWeatherClient(cc *grpc.ClientConn) WeatherClient {
	return &weatherClient{cc}
}

func (c *weatherClient) GetCurrent(ctx context.Context, in *WeatherRequest, opts ...grpc.CallOption) (*WeatherResponse, error) {
	out := new(WeatherResponse)
	err := grpc.Invoke(ctx, "/proto.Weather/GetCurrent", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Weather service

type WeatherServer interface {
	GetCurrent(context.Context, *WeatherRequest) (*WeatherResponse, error)
}

func RegisterWeatherServer(s *grpc.Server, srv WeatherServer) {
	s.RegisterService(&_Weather_serviceDesc, srv)
}

func _Weather_GetCurrent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WeatherRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WeatherServer).GetCurrent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Weather/GetCurrent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WeatherServer).GetCurrent(ctx, req.(*WeatherRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Weather_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Weather",
	HandlerType: (*WeatherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCurrent",
			Handler:    _Weather_GetCurrent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/weather.proto",
}

func init() { proto1.RegisterFile("proto/weather.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 200 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0x4f, 0x4d, 0x2c, 0xc9, 0x48, 0x2d, 0xd2, 0x03, 0xf3, 0x84, 0x58, 0xc1, 0x94,
	0x92, 0x05, 0x17, 0x5f, 0x38, 0x44, 0x3c, 0x28, 0xb5, 0xb0, 0x34, 0xb5, 0xb8, 0x44, 0x48, 0x84,
	0x8b, 0xb5, 0x24, 0x3f, 0x3b, 0x35, 0x4f, 0x82, 0x51, 0x81, 0x51, 0x83, 0x33, 0x08, 0xc2, 0x11,
	0x12, 0xe0, 0x62, 0xae, 0xca, 0x2c, 0x90, 0x60, 0x52, 0x60, 0xd4, 0x60, 0x0e, 0x02, 0x31, 0x95,
	0x0a, 0xb9, 0xf8, 0xe1, 0x3a, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0xa4, 0xb8, 0x38, 0x72,
	0xf2, 0x93, 0x13, 0x4b, 0x32, 0xf3, 0x61, 0xba, 0xe1, 0x7c, 0x21, 0x05, 0x2e, 0xee, 0x94, 0xd4,
	0xe2, 0xe4, 0xa2, 0xcc, 0x02, 0xb0, 0x34, 0x13, 0x58, 0x1a, 0x59, 0x08, 0xa4, 0xa2, 0x24, 0x35,
	0xb7, 0x20, 0xb5, 0x28, 0xb1, 0xa4, 0xb4, 0x28, 0x55, 0x82, 0x59, 0x81, 0x51, 0x83, 0x31, 0x08,
	0x59, 0xc8, 0xc8, 0x83, 0x8b, 0x1d, 0x6a, 0xa5, 0x90, 0x2d, 0x17, 0x97, 0x7b, 0x6a, 0x89, 0x73,
	0x69, 0x51, 0x51, 0x6a, 0x5e, 0x89, 0x90, 0x28, 0xc4, 0x53, 0x7a, 0xa8, 0x5e, 0x91, 0x12, 0x43,
	0x17, 0x86, 0xb8, 0x53, 0x89, 0x21, 0x89, 0x0d, 0x2c, 0x61, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff,
	0xfb, 0x3e, 0x2a, 0x2b, 0x1b, 0x01, 0x00, 0x00,
}
